root@6521c82f361c:/app# yarn test
yarn run v1.22.18
$ jest --testTimeout=10000 --forceExit
GET /login 200 386.354 ms - 799
GET /login 200 48.946 ms - 799
  console.log
    Executing (default): CREATE TABLE IF NOT EXISTS "users" ("userId" INTEGER NOT NULL , "username" VARCHAR(255) NOT NULL, PRIMARY KEY ("userId"));

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /logout 302 89.683 ms - 23
  console.log
    Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "users" ("userId","username") VALUES ($1,$2) ON CONFLICT ("userId") DO UPDATE SET "userId"=EXCLUDED."userId","username"=EXCLUDED."username" RETURNING "userId","username";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): CREATE TABLE IF NOT EXISTS "schedules" ("scheduleId" UUID NOT NULL , "scheduleName" VARCHAR(255) NOT NULL, "memo" TEXT NOT NULL, "createdBy" INTEGER NOT NULL REFERENCES "users" ("userId") ON DELETE NO ACTION ON UPDATE CASCADE, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("scheduleId"));

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): CREATE TABLE IF NOT EXISTS "comments" ("scheduleId" UUID NOT NULL , "userId" INTEGER NOT NULL  REFERENCES "users" ("userId") ON DELETE NO ACTION ON UPDATE CASCADE, "comment" VARCHAR(255) NOT NULL, PRIMARY KEY ("scheduleId","userId"));

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): CREATE TABLE IF NOT EXISTS "candidates" ("candidateId"   SERIAL , "candidateName" VARCHAR(255) NOT NULL, "scheduleId" UUID NOT NULL, PRIMARY KEY ("candidateId"));

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'schedules' GROUP 
BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'comments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/new 200 293.873 ms - 1415
  console.log
    Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'candidates' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): CREATE TABLE IF NOT EXISTS "availabilities" ("candidateId" INTEGER NOT NULL  REFERENCES "candidates" ("candidateId") ON DELETE NO ACTION ON UPDATE CASCADE, "userId" INTEGER NOT NULL  REFERENCES "users" ("userId") ON DELETE NO ACTION ON UPDATE CASCADE, "availability" INTEGER NOT NULL DEFAULT 0, "scheduleId" UUID NOT NULL, PRIMARY KEY ("candidateId","userId"));

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'availabilities' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "schedules" ("scheduleId","scheduleName","memo","createdBy","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "scheduleId","scheduleName","memo","createdBy","updatedAt";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テスト候補1','01afc0ea-7bdb-4946-afd0-e285bd5288fc'),(DEFAULT,'テスト候補2','01afc0ea-7bdb-4946-afd0-e285bd5288fc'),(DEFAULT,'テスト候補3','01afc0ea-7bdb-4946-afd0-e285bd5288fc') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules 302 63.429 ms - 69
  console.log
    Executing (default): SELECT "schedules"."scheduleId", "schedules"."scheduleName", "schedules"."memo", "schedules"."createdBy", "schedules"."updatedAt", "user"."userId" AS "user.userId", "user"."username" AS "user.username" FROM "schedules" AS "schedules" LEFT OUTER JOIN "users" AS "user" ON "schedules"."createdBy" = "user"."userId" WHERE "schedules"."scheduleId" = '01afc0ea-7bdb-4946-afd0-e285bd5288fc' ORDER BY "schedules"."updatedAt" DESC;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '01afc0ea-7bdb-4946-afd0-e285bd5288fc' ORDER BY "candidates"."candidateId" ASC;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "availabilities"."candidateId", "availabilities"."userId", "availabilities"."availability", "availabilities"."scheduleId", "user"."userId" AS "user.userId", "user"."username" AS "user.username" FROM "availabilities" AS "availabilities" LEFT OUTER JOIN "users" AS "user" ON "availabilities"."userId" = "user"."userId" WHERE "availabilities"."scheduleId" = '01afc0ea-7bdb-4946-afd0-e285bd5288fc' ORDER BY "user"."username" ASC, "availabilities"."candidateId" ASC;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '01afc0ea-7bdb-4946-afd0-e285bd5288fc';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/01afc0ea-7bdb-4946-afd0-e285bd5288fc 200 224.734 ms - 2130
  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '01afc0ea-7bdb-4946-afd0-e285bd5288fc';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = '01afc0ea-7bdb-4946-afd0-e285bd5288fc';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '01afc0ea-7bdb-4946-afd0-e285bd5288fc';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 216

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 217

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 218

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '01afc0ea-7bdb-4946-afd0-e285bd5288fc';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "schedules" WHERE "scheduleId" = '01afc0ea-7bdb-4946-afd0-e285bd5288fc'

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "users" ("userId","username") VALUES ($1,$2) ON CONFLICT ("userId") DO UPDATE SET "userId"=EXCLUDED."userId","username"=EXCLUDED."username" RETURNING "userId","username";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/new 200 41.492 ms - 1415
  console.log
    Executing (default): INSERT INTO "schedules" ("scheduleId","scheduleName","memo","createdBy","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "scheduleId","scheduleName","memo","createdBy","updatedAt";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テスト出欠更新候補1','eab79f15-236d-4832-941e-ec85a8e451dc') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules 302 14.593 ms - 69
  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = 'eab79f15-236d-4832-941e-ec85a8e451dc' LIMIT 1;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "availabilities" ("candidateId","userId","availability","scheduleId") VALUES ($1,$2,$3,$4) ON CONFLICT ("candidateId","userId") DO UPDATE SET "scheduleId"=EXCLUDED."scheduleId","userId"=EXCLUDED."userId","candidateId"=EXCLUDED."candidateId","availability"=EXCLUDED."availability" RETURNING "candidateId","userId","availability","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/eab79f15-236d-4832-941e-ec85a8e451dc/users/0/candidates/219 200 14.532 ms - 32
  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = 'eab79f15-236d-4832-941e-ec85a8e451dc';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = 'eab79f15-236d-4832-941e-ec85a8e451dc';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = 'eab79f15-236d-4832-941e-ec85a8e451dc';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "availabilities" WHERE "candidateId" = 219 AND "userId" = 0

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = 'eab79f15-236d-4832-941e-ec85a8e451dc';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 219

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = 'eab79f15-236d-4832-941e-ec85a8e451dc';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "schedules" WHERE "scheduleId" = 'eab79f15-236d-4832-941e-ec85a8e451dc'

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "users" ("userId","username") VALUES ($1,$2) ON CONFLICT ("userId") DO UPDATE SET "userId"=EXCLUDED."userId","username"=EXCLUDED."username" RETURNING "userId","username";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/new 200 44.465 ms - 1415
  console.log
    Executing (default): INSERT INTO "schedules" ("scheduleId","scheduleName","memo","createdBy","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "scheduleId","scheduleName","memo","createdBy","updatedAt";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テストコメント更新候補1','738efe68-5054-4b8a-acf5-23ff2b888505') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules 302 14.820 ms - 69
  console.log
    Executing (default): INSERT INTO "comments" ("scheduleId","userId","comment") VALUES ($1,$2,$3) ON CONFLICT ("scheduleId","userId") DO UPDATE SET "scheduleId"=EXCLUDED."scheduleId","userId"=EXCLUDED."userId","comment"=EXCLUDED."comment" RETURNING "scheduleId","userId","comment";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/738efe68-5054-4b8a-acf5-23ff2b888505/users/0/comments 200 9.485 ms - 39
  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '738efe68-5054-4b8a-acf5-23ff2b888505';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '738efe68-5054-4b8a-acf5-23ff2b888505';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "comments" WHERE "scheduleId" = '738efe68-5054-4b8a-acf5-23ff2b888505' AND "userId" = 0

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = '738efe68-5054-4b8a-acf5-23ff2b888505';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '738efe68-5054-4b8a-acf5-23ff2b888505';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 220

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '738efe68-5054-4b8a-acf5-23ff2b888505';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "schedules" WHERE "scheduleId" = '738efe68-5054-4b8a-acf5-23ff2b888505'

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "users" ("userId","username") VALUES ($1,$2) ON CONFLICT ("userId") DO UPDATE SET "userId"=EXCLUDED."userId","username"=EXCLUDED."username" RETURNING "userId","username";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/new 200 31.756 ms - 1415
  console.log
    Executing (default): INSERT INTO "schedules" ("scheduleId","scheduleName","memo","createdBy","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "scheduleId","scheduleName","memo","createdBy","updatedAt";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テスト更新候補1','da9051c5-848f-4a33-a411-60a3acf7001d') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules 302 14.998 ms - 69
  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = 'da9051c5-848f-4a33-a411-60a3acf7001d';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): UPDATE "schedules" SET "scheduleName"=$1,"memo"=$2,"updatedAt"=$3 WHERE "scheduleId" = $4

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テスト更新候補2','da9051c5-848f-4a33-a411-60a3acf7001d') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/da9051c5-848f-4a33-a411-60a3acf7001d?edit=1 302 25.495 ms - 69
  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = 'da9051c5-848f-4a33-a411-60a3acf7001d';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = 'da9051c5-848f-4a33-a411-60a3acf7001d' ORDER BY "candidates"."candidateId" ASC;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = 'da9051c5-848f-4a33-a411-60a3acf7001d';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = 'da9051c5-848f-4a33-a411-60a3acf7001d';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = 'da9051c5-848f-4a33-a411-60a3acf7001d';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 221

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 222

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = 'da9051c5-848f-4a33-a411-60a3acf7001d';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "schedules" WHERE "scheduleId" = 'da9051c5-848f-4a33-a411-60a3acf7001d'

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "users" ("userId","username") VALUES ($1,$2) ON CONFLICT ("userId") DO UPDATE SET "userId"=EXCLUDED."userId","username"=EXCLUDED."username" RETURNING "userId","username";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/new 200 28.711 ms - 1415
  console.log
    Executing (default): INSERT INTO "schedules" ("scheduleId","scheduleName","memo","createdBy","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "scheduleId","scheduleName","memo","createdBy","updatedAt";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テスト削除候補1','2587aa77-3f08-48ed-a411-b42d006052ad') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules 302 14.829 ms - 69
  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad' LIMIT 1;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "availabilities" ("candidateId","userId","availability","scheduleId") VALUES ($1,$2,$3,$4) ON CONFLICT ("candidateId","userId") DO UPDATE SET "scheduleId"=EXCLUDED."scheduleId","userId"=EXCLUDED."userId","candidateId"=EXCLUDED."candidateId","availability"=EXCLUDED."availability" RETURNING "candidateId","userId","availability","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/2587aa77-3f08-48ed-a411-b42d006052ad/users/0/candidates/223 200 6.515 ms - 32
  console.log
    Executing (default): INSERT INTO "comments" ("scheduleId","userId","comment") VALUES ($1,$2,$3) ON CONFLICT ("scheduleId","userId") DO UPDATE SET "scheduleId"=EXCLUDED."scheduleId","userId"=EXCLUDED."userId","comment"=EXCLUDED."comment" RETURNING "scheduleId","userId","comment";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/2587aa77-3f08-48ed-a411-b42d006052ad/users/0/comments 200 5.900 ms - 39
  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "comments" WHERE "scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad' AND "userId" = 0

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "availabilities" WHERE "candidateId" = 223 AND "userId" = 0

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 223

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "schedules" WHERE "scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad'

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/2587aa77-3f08-48ed-a411-b42d006052ad?delete=1 302 38.210 ms - 23
  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '2587aa77-3f08-48ed-a411-b42d006052ad';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

 PASS  test/test.js
  /login
    ✓ ログインのためのリンクが含まれる (550 ms)
    ✓ ログイン時はユーザー名が表示される (69 ms)
  /logout
    ✓ / にリダイレクトされる (135 ms)
  /schedules
    ✓ 予定が作成でき、表示される (666 ms)
  /schedules/:scheduleId/users/:userId/candidates/:candidateId
    ✓ 出欠が更新できる (116 ms)
  /schedules/:scheduleId/users/:userId/comments
    ✓ コメントが更新できる (103 ms)
  /schedules/:scheduleId?edit=1
    ✓ 予定が更新でき、候補が追加できる (103 ms)
  /schedules/:scheduleId?delete=1
    ✓ 予定に関連する全ての情報が削除できる (147 ms)

Test Suites: 1 passed, 1 total
Tests:       8 passed, 8 total
Snapshots:   0 total
Time:        4.089 s, estimated 5 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
Done in 5.52s.
