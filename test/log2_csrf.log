root@6521c82f361c:/app# yarn test
yarn run v1.22.18
$ jest --testTimeout=10000 --forceExit
GET /login 200 368.010 ms - 799
GET /login 200 41.027 ms - 799
GET /logout 302 6.002 ms - 23
  console.log
    Executing (default): CREATE TABLE IF NOT EXISTS "users" ("userId" INTEGER NOT NULL , "username" VARCHAR(255) NOT NULL, PRIMARY KEY ("userId"));

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "users" ("userId","username") VALUES ($1,$2) ON CONFLICT ("userId") DO UPDATE SET "userId"=EXCLUDED."userId","username"=EXCLUDED."username" RETURNING "userId","username";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): CREATE TABLE IF NOT EXISTS "schedules" ("scheduleId" UUID NOT NULL , "scheduleName" VARCHAR(255) NOT NULL, "memo" TEXT NOT NULL, "createdBy" INTEGER NOT NULL REFERENCES "users" ("userId") ON DELETE NO ACTION ON UPDATE CASCADE, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("scheduleId"));

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): CREATE TABLE IF NOT EXISTS "comments" ("scheduleId" UUID NOT NULL , "userId" INTEGER NOT NULL  REFERENCES "users" ("userId") ON DELETE NO ACTION ON UPDATE CASCADE, "comment" VARCHAR(255) NOT NULL, PRIMARY KEY ("scheduleId","userId"));

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): CREATE TABLE IF NOT EXISTS "candidates" ("candidateId"   SERIAL , "candidateName" VARCHAR(255) NOT NULL, "scheduleId" UUID NOT NULL, PRIMARY KEY ("candidateId"));

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'schedules' GROUP 
BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/new 200 229.561 ms - 1415
  console.log
    Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'comments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'candidates' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): CREATE TABLE IF NOT EXISTS "availabilities" ("candidateId" INTEGER NOT NULL  REFERENCES "candidates" ("candidateId") ON DELETE NO ACTION ON UPDATE CASCADE, "userId" INTEGER NOT NULL  REFERENCES "users" ("userId") ON DELETE NO ACTION ON UPDATE CASCADE, "availability" INTEGER NOT NULL DEFAULT 0, "scheduleId" UUID NOT NULL, PRIMARY KEY ("candidateId","userId"));

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "schedules" ("scheduleId","scheduleName","memo","createdBy","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "scheduleId","scheduleName","memo","createdBy","updatedAt";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'availabilities' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テスト候補1','f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe'),(DEFAULT,'テスト候補2','f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe'),(DEFAULT,'テスト候補3','f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules 302 52.267 ms - 69
  console.log
    Executing (default): SELECT "schedules"."scheduleId", "schedules"."scheduleName", "schedules"."memo", "schedules"."createdBy", "schedules"."updatedAt", "user"."userId" AS "user.userId", "user"."username" AS "user.username" FROM "schedules" AS "schedules" LEFT OUTER JOIN "users" AS "user" ON "schedules"."createdBy" = "user"."userId" WHERE "schedules"."scheduleId" = 'f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe' ORDER BY "schedules"."updatedAt" DESC;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = 'f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe' ORDER BY "candidates"."candidateId" ASC;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "availabilities"."candidateId", "availabilities"."userId", "availabilities"."availability", "availabilities"."scheduleId", "user"."userId" AS "user.userId", "user"."username" AS "user.username" FROM "availabilities" AS "availabilities" LEFT OUTER JOIN "users" AS "user" ON "availabilities"."userId" = "user"."userId" WHERE "availabilities"."scheduleId" = 'f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe' ORDER BY "user"."username" ASC, "availabilities"."candidateId" ASC;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = 'f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe 200 154.575 ms - 2130
  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = 'f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = 'f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = 'f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 192

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 193

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 194

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = 'f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "schedules" WHERE "scheduleId" = 'f39efeb5-ce06-40f3-8a2b-ec7ad1f250fe'

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "users" ("userId","username") VALUES ($1,$2) ON CONFLICT ("userId") DO UPDATE SET "userId"=EXCLUDED."userId","username"=EXCLUDED."username" RETURNING "userId","username";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/new 200 43.887 ms - 1415
  console.log
    Executing (default): INSERT INTO "schedules" ("scheduleId","scheduleName","memo","createdBy","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "scheduleId","scheduleName","memo","createdBy","updatedAt";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テスト出欠更新候補1','2c81f2af-99c8-4525-a4cc-6ca5ce7f9805') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules 302 14.724 ms - 69
  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '2c81f2af-99c8-4525-a4cc-6ca5ce7f9805' LIMIT 1;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "availabilities" ("candidateId","userId","availability","scheduleId") VALUES ($1,$2,$3,$4) ON CONFLICT ("candidateId","userId") DO UPDATE SET "scheduleId"=EXCLUDED."scheduleId","userId"=EXCLUDED."userId","candidateId"=EXCLUDED."candidateId","availability"=EXCLUDED."availability" RETURNING "candidateId","userId","availability","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/2c81f2af-99c8-4525-a4cc-6ca5ce7f9805/users/0/candidates/195 200 6.502 ms - 32
  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = '2c81f2af-99c8-4525-a4cc-6ca5ce7f9805';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '2c81f2af-99c8-4525-a4cc-6ca5ce7f9805';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = '2c81f2af-99c8-4525-a4cc-6ca5ce7f9805';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "availabilities" WHERE "candidateId" = 195 AND "userId" = 0

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '2c81f2af-99c8-4525-a4cc-6ca5ce7f9805';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 195

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '2c81f2af-99c8-4525-a4cc-6ca5ce7f9805';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "schedules" WHERE "scheduleId" = '2c81f2af-99c8-4525-a4cc-6ca5ce7f9805'

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "users" ("userId","username") VALUES ($1,$2) ON CONFLICT ("userId") DO UPDATE SET "userId"=EXCLUDED."userId","username"=EXCLUDED."username" RETURNING "userId","username";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/new 200 34.657 ms - 1415
  console.log
    Executing (default): INSERT INTO "schedules" ("scheduleId","scheduleName","memo","createdBy","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "scheduleId","scheduleName","memo","createdBy","updatedAt";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テストコメント更新候補1','4b4affa7-7e3c-4002-9b9a-5e172746572e') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules 302 11.989 ms - 69
  console.log
    Executing (default): INSERT INTO "comments" ("scheduleId","userId","comment") VALUES ($1,$2,$3) ON CONFLICT ("scheduleId","userId") DO UPDATE SET "scheduleId"=EXCLUDED."scheduleId","userId"=EXCLUDED."userId","comment"=EXCLUDED."comment" RETURNING "scheduleId","userId","comment";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/4b4affa7-7e3c-4002-9b9a-5e172746572e/users/0/comments 200 9.522 ms - 39
  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '4b4affa7-7e3c-4002-9b9a-5e172746572e';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '4b4affa7-7e3c-4002-9b9a-5e172746572e';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "comments" WHERE "scheduleId" = '4b4affa7-7e3c-4002-9b9a-5e172746572e' AND "userId" = 0

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = '4b4affa7-7e3c-4002-9b9a-5e172746572e';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '4b4affa7-7e3c-4002-9b9a-5e172746572e';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 196

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '4b4affa7-7e3c-4002-9b9a-5e172746572e';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "schedules" WHERE "scheduleId" = '4b4affa7-7e3c-4002-9b9a-5e172746572e'

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "users" ("userId","username") VALUES ($1,$2) ON CONFLICT ("userId") DO UPDATE SET "userId"=EXCLUDED."userId","username"=EXCLUDED."username" RETURNING "userId","username";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/new 200 30.662 ms - 1415
  console.log
    Executing (default): INSERT INTO "schedules" ("scheduleId","scheduleName","memo","createdBy","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "scheduleId","scheduleName","memo","createdBy","updatedAt";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テスト更新候補1','365d2248-741f-49bd-a29b-727d06be8477') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules 302 16.763 ms - 69
  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '365d2248-741f-49bd-a29b-727d06be8477';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): UPDATE "schedules" SET "scheduleName"=$1,"memo"=$2,"updatedAt"=$3 WHERE "scheduleId" = $4

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テスト更新候補2','365d2248-741f-49bd-a29b-727d06be8477') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/365d2248-741f-49bd-a29b-727d06be8477?edit=1 302 23.834 ms - 69
  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '365d2248-741f-49bd-a29b-727d06be8477';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '365d2248-741f-49bd-a29b-727d06be8477' ORDER BY "candidates"."candidateId" ASC;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '365d2248-741f-49bd-a29b-727d06be8477';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = '365d2248-741f-49bd-a29b-727d06be8477';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '365d2248-741f-49bd-a29b-727d06be8477';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 197

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 198

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '365d2248-741f-49bd-a29b-727d06be8477';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "schedules" WHERE "scheduleId" = '365d2248-741f-49bd-a29b-727d06be8477'

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "users" ("userId","username") VALUES ($1,$2) ON CONFLICT ("userId") DO UPDATE SET "userId"=EXCLUDED."userId","username"=EXCLUDED."username" RETURNING "userId","username";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

GET /schedules/new 200 28.937 ms - 1415
  console.log
    Executing (default): INSERT INTO "schedules" ("scheduleId","scheduleName","memo","createdBy","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "scheduleId","scheduleName","memo","createdBy","updatedAt";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "candidates" ("candidateId","candidateName","scheduleId") VALUES (DEFAULT,'テスト削除候補1','47cc575d-cb5d-4068-8fd1-daa79b83e44f') RETURNING "candidateId","candidateName","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules 302 13.730 ms - 69
  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f' LIMIT 1;

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): INSERT INTO "availabilities" ("candidateId","userId","availability","scheduleId") VALUES ($1,$2,$3,$4) ON CONFLICT ("candidateId","userId") DO UPDATE SET "scheduleId"=EXCLUDED."scheduleId","userId"=EXCLUDED."userId","candidateId"=EXCLUDED."candidateId","availability"=EXCLUDED."availability" RETURNING "candidateId","userId","availability","scheduleId";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/47cc575d-cb5d-4068-8fd1-daa79b83e44f/users/0/candidates/199 200 7.752 ms - 32
  console.log
    Executing (default): INSERT INTO "comments" ("scheduleId","userId","comment") VALUES ($1,$2,$3) ON CONFLICT ("scheduleId","userId") DO UPDATE SET "scheduleId"=EXCLUDED."scheduleId","userId"=EXCLUDED."userId","comment"=EXCLUDED."comment" RETURNING "scheduleId","userId","comment";

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/47cc575d-cb5d-4068-8fd1-daa79b83e44f/users/0/comments 200 5.010 ms - 39
  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "comments" WHERE "scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f' AND "userId" = 0

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "availabilities" WHERE "candidateId" = 199 AND "userId" = 0

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "candidates" WHERE "candidateId" = 199

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): DELETE FROM "schedules" WHERE "scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f'

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

POST /schedules/47cc575d-cb5d-4068-8fd1-daa79b83e44f?delete=1 302 39.692 ms - 23
  console.log
    Executing (default): SELECT "scheduleId", "userId", "comment" FROM "comments" AS "comments" WHERE "comments"."scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "userId", "availability", "scheduleId" FROM "availabilities" AS "availabilities" WHERE "availabilities"."scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "candidateId", "candidateName", "scheduleId" FROM "candidates" AS "candidates" WHERE "candidates"."scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

  console.log
    Executing (default): SELECT "scheduleId", "scheduleName", "memo", "createdBy", "updatedAt" FROM "schedules" AS "schedules" WHERE "schedules"."scheduleId" = '47cc575d-cb5d-4068-8fd1-daa79b83e44f';

      at Sequelize.log (node_modules/sequelize/lib/sequelize.js:1177:15)

 PASS  test/test.js
  /login
    ✓ ログインのためのリンクが含まれる (530 ms)
    ✓ ログイン時はユーザー名が表示される (67 ms)
  /logout
    ✓ / にリダイレクトされる (97 ms)
  /schedules
    ✓ 予定が作成でき、表示される (610 ms)
  /schedules/:scheduleId/users/:userId/candidates/:candidateId
    ✓ 出欠が更新できる (109 ms)
  /schedules/:scheduleId/users/:userId/comments
    ✓ コメントが更新できる (80 ms)
  /schedules/:scheduleId?edit=1
    ✓ 予定が更新でき、候補が追加できる (103 ms)
  /schedules/:scheduleId?delete=1
    ✓ 予定に関連する全ての情報が削除できる (156 ms)

Test Suites: 1 passed, 1 total
Tests:       8 passed, 8 total
Snapshots:   0 total
Time:        3.971 s, estimated 4 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
Done in 5.36s.
